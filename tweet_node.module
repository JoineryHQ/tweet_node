<?php

/**
 * @file
 * Contains tweet_node.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\node\NodeForm;

/**
 * Implements hook_help().
 */
function tweet_node_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the tweet_node module.
    case 'help.page.tweet_node':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Tweet about a node when the node is saved.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function tweet_node_theme() {
  return [
    'tweet_node' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function tweet_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();

  if ($form_object instanceof NodeForm) {
    /** @var \Drupal\node\NodeInterface $node */
    $node = $form_object->getEntity();
    $node_type = $node->getType();

    if (\Drupal::currentUser()->hasPermission('tweet about content')) {
      $weight = 0;
      foreach ($form as $element) {
        if (is_array($element) && ($element['#type'] ?? '') == 'details') {
          $weight = max([$weight, $element['#weight']]);
        }
      }
      $form['tweet_node'] = [
        '#type' => 'details',
        '#title' => t('Tweet'),
        '#access' => \Drupal::currentUser()->hasPermission('tweet about content'),
        '#open' => 0,
        '#group' => 'advanced',
        '#tree' => TRUE,
        '#weight' => ++$weight,
      ];
      $form['tweet_node']['is_tweet_node'] = [
        '#type' => 'checkbox',
        '#field_name' => 'is_tweet_node',
        '#title' => t('Tweet about this'),
        '#required' => FALSE,
        '#default_value' => 0,
        '#weight' => $weight++,
      ];
      $form['tweet_node']['tweet_body'] = [
        '#type' => 'textarea',
        '#field_name' => 'tweet_body',
        '#title' => t('Tweet body'),
        '#required' => FALSE,
        '#default_value' => \Drupal::config('tweet_node.settings')->get('default_tweet_body'),
        '#weight' => $weight++,
        '#states' => [
          //show this textfield only if the radio 'other' is selected above
          'visible' => [
            //don't mistake :input for the type of field. You'll always use
            //:input here, no matter whether your source is a select, radio or checkbox element.
            ':input[name="tweet_node[is_tweet_node]"]' => ['checked' => TRUE],
          ],
        ],
      ];

      $form['actions']['submit']['#submit'][] = '_tweet_node_node_form_submit';
      $form['#validate'][] = '_tweet_node_node_form_validate';
    }
  }
}

/**
 * Validation handler for node edit form.
 *
 * Ensure tweet body is valid, and store url-replaced tweet body for processing
 * in submit handler.
 */
function _tweet_node_node_form_validate(array &$form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  if ($values['tweet_node']['is_tweet_node'] && empty($values['tweet_node']['tweet_body'])) {
    $form_state->setErrorByName('tweet_node', t('Tweet body is required if "Teeet about this" is selected.'));
  }
  else {
    $tweetNodeBodyFinal = $values['tweet_node']['tweet_body'];
    $tweetLengthErrorMessage = t('The Tweet body was too long; it must be 140 characters or less.');
    if (strpos($values['tweet_node']['tweet_body'], '!url') !== FALSE) {
      $node = $form_state->getformObject()->getEntity();
      $nodeUrl = $node->toUrl()->setAbsolute()->toString();
      $tweetNodeBodyFinal = str_replace('!url', $nodeUrl, $values['tweet_node']['tweet_body']);
      $tweetLengthErrorMessage = t('The Tweet body was too long; it must be 140 characters or less, with the URL.');
    }
    if (strlen($tweetNodeBodyFinal) > 140) {
      $form_state->setErrorByName('tweet_node', $tweetLengthErrorMessage);
    }
    else {
      $form_state->setValue('tweet_node_body_final', $tweetNodeBodyFinal);
    }
  }
}

/**
 * Submit handler for node edit form.
 *
 * Auto-tweet when so instructed in the node.edit form.
 */
function _tweet_node_node_form_submit(array $form, \Drupal\Core\Form\FormStateInterface $form_state){
  // IF the user has the "Tweet about content" permission,
  // AND if "Tweet about this" is checked,
  // AND if the node is in Published status,
  // AND the url-replaced tweet body has any length,
  // THEN replace `!url` in "Tweet body" with the absolute URL of the node and tweet the node.
  if (\Drupal::currentUser()->hasPermission('tweet about content')) {
    $values = $form_state->getValues();
    if (
      $values['status']['value'] == \Drupal\node\NodeInterface::PUBLISHED
      && $values['tweet_node']['is_tweet_node']
      && !empty($values['tweet_node_body_final'])
    ) {
      _tweet_node_send_tweet($values['tweet_node_body_final']);
    }
  }
}

function _tweet_node_send_tweet($tweetBody) {
  \Drupal::messenger()->addStatus(t('FIXME: Would tweet here: '. $tweetBody));
}
